# Generated by Django 5.1.11 on 2025-08-26 22:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0002_etablissementinvitation'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Ex: 6A, 5B, 2ndeC', max_length=50, verbose_name='Nom de la classe')),
                ('niveau', models.CharField(choices=[('6e', 'Sixième'), ('5e', 'Cinquième'), ('4e', 'Quatrième'), ('3e', 'Troisième'), ('2nde', 'Seconde'), ('1ere', 'Première'), ('term', 'Terminale'), ('autre', 'Autre')], help_text='Niveau scolaire de la classe', max_length=10, verbose_name='Niveau')),
                ('annee_scolaire', models.CharField(help_text='Format: 2024-2025', max_length=9, verbose_name='Année scolaire')),
                ('effectif_max', models.PositiveIntegerField(default=35, help_text="Nombre maximum d'élèves dans cette classe", verbose_name='Effectif maximum')),
                ('actif', models.BooleanField(default=True, help_text="Classe active dans l'établissement", verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('etablissement', models.ForeignKey(help_text='Établissement auquel appartient cet enregistrement', on_delete=django.db.models.deletion.CASCADE, to='schools.etablissement', verbose_name='Établissement')),
                ('professeur_principal', models.ForeignKey(blank=True, limit_choices_to={'role': 'professeur'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classes_principales', to=settings.AUTH_USER_MODEL, verbose_name='Professeur principal')),
            ],
            options={
                'verbose_name': 'Classe',
                'verbose_name_plural': 'Classes',
                'ordering': ['niveau', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de famille')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('numero_ine', models.CharField(blank=True, help_text='Identifiant National Élève (optionnel)', max_length=11, verbose_name='Numéro INE')),
                ('actif', models.BooleanField(default=True, help_text="Élève scolarisé dans l'établissement", verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('classe_actuelle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eleves', to='academic.classe', verbose_name='Classe actuelle')),
                ('etablissement', models.ForeignKey(help_text='Établissement auquel appartient cet enregistrement', on_delete=django.db.models.deletion.CASCADE, to='schools.etablissement', verbose_name='Établissement')),
            ],
            options={
                'verbose_name': 'Élève',
                'verbose_name_plural': 'Élèves',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Ex: Mathématiques, Français, Histoire-Géographie', max_length=100, verbose_name='Nom de la matière')),
                ('code_court', models.CharField(help_text="Abréviation pour l'affichage (ex: MATH, FR, HG)", max_length=10, verbose_name='Code court')),
                ('couleur', models.CharField(default='#007bff', help_text="Couleur en format HEX pour l'affichage dans l'interface", max_length=7, verbose_name='Couleur')),
                ('actif', models.BooleanField(default=True, help_text="Matière enseignée dans l'établissement", verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('etablissement', models.ForeignKey(help_text='Établissement auquel appartient cet enregistrement', on_delete=django.db.models.deletion.CASCADE, to='schools.etablissement', verbose_name='Établissement')),
            ],
            options={
                'verbose_name': 'Matière',
                'verbose_name_plural': 'Matières',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='RelationFamiliale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_relation', models.CharField(choices=[('pere', 'Père'), ('mere', 'Mère'), ('tuteur_legal', 'Tuteur légal'), ('autre', 'Autre responsable')], default='autre', max_length=20, verbose_name='Type de relation')),
                ('principal', models.BooleanField(default=False, help_text='Contact prioritaire pour cet élève', verbose_name='Contact principal')),
                ('autorise_notifications', models.BooleanField(default=True, help_text="Ce parent peut recevoir les notifications concernant l'élève", verbose_name='Autorise les notifications')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations_familiales', to='academic.eleve', verbose_name='Élève')),
                ('etablissement', models.ForeignKey(help_text='Établissement auquel appartient cet enregistrement', on_delete=django.db.models.deletion.CASCADE, to='schools.etablissement', verbose_name='Établissement')),
                ('parent', models.ForeignKey(limit_choices_to={'role': 'parent'}, on_delete=django.db.models.deletion.CASCADE, related_name='enfants', to=settings.AUTH_USER_MODEL, verbose_name='Parent/Responsable')),
            ],
            options={
                'verbose_name': 'Relation familiale',
                'verbose_name_plural': 'Relations familiales',
            },
        ),
        migrations.AddConstraint(
            model_name='classe',
            constraint=models.UniqueConstraint(fields=('nom', 'annee_scolaire', 'etablissement'), name='unique_classe_per_year_etablissement'),
        ),
        migrations.AddConstraint(
            model_name='eleve',
            constraint=models.UniqueConstraint(fields=('nom', 'prenom', 'etablissement'), name='unique_eleve_per_etablissement'),
        ),
        migrations.AddConstraint(
            model_name='eleve',
            constraint=models.UniqueConstraint(condition=models.Q(('numero_ine__isnull', False), models.Q(('numero_ine', ''), _negated=True)), fields=('numero_ine', 'etablissement'), name='unique_ine_per_etablissement'),
        ),
        migrations.AddConstraint(
            model_name='matiere',
            constraint=models.UniqueConstraint(fields=('code_court', 'etablissement'), name='unique_code_court_per_etablissement'),
        ),
        migrations.AddConstraint(
            model_name='matiere',
            constraint=models.UniqueConstraint(fields=('nom', 'etablissement'), name='unique_matiere_per_etablissement'),
        ),
        migrations.AddConstraint(
            model_name='relationfamiliale',
            constraint=models.UniqueConstraint(fields=('eleve', 'parent'), name='unique_parent_eleve_relation'),
        ),
    ]
